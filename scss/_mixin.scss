// @use "sass:math";

//color
$border: #2d2d2d;
$white: #efefef;
$black: #222222;

$yellow: #E3B678;
$sand: #A17647;
$brown: #473E32;
$gray: #888888;
$dgray: #111111;
$grd: transparent linear-gradient(147deg, #e3b678 0%, #ae8450 45%, #e3b678 70%, #a17647 100%);

// font family
$sd: 'AppleSDGothicNeoR', 'AppleSDGothicNeoR', '맑은 고딕', 'Malgun Gothic', 'Dotum', '돋움', 'Gulim', '굴림', '굴림체', Sans-Serif;
$sd-m: 'AppleSDGothicNeoM';
$sd-b: 'AppleSDGothicNeoB';
$sd-eb: 'AppleSDGothicNeoEB';
$sd-sb: 'AppleSDGothicNeoSB';
$robo: 'Roboto Regular';
$robo-b: 'Roboto Bold';
$robo-l: 'Roboto Light';

//breakpoints
$pc: 1280px;
$mobile: 720px;
$min-mobile: 375px;

//media query
@mixin pc {
    @media screen and (min-width: #{$pc}) {
        @content;
    }
}
@mixin tablet {
    @media screen and (min-width: #{$mobile}) and (max-width: #{$pc}){
        @content;
    }
}
@mixin mobile {
    @media screen and (max-width: #{$pc}) {
        @content;
    }
}
@mixin minMobile {
    @media screen and (max-width: #{$min-mobile}) {
        @content;
    }
}

//media only
@mixin pcOnly{
    @include mobile{ display: none; }
}
@mixin moOnly{
    @include pc{ display: none; }
}

// 
@mixin flex($value: (space-between)){
  display: flex;
  justify-content: $value;
}

@mixin theme($light-theme: true) {
  @if $light-theme {
    background: lighten($white, 100%);
    color: darken($black, 100%);
  }

}

//clear
@mixin clear{
    &::after{
        content:'';
        display:block;
        clear:both;
    }
}

//ellipsis
@mixin ellipsis($value){
    overflow: hidden;
    text-overflow: ellipsis;
    -webkit-line-clamp: $value;
    @if $value == 1{
        white-space: nowrap;
    }@else{
        display: -webkit-box;
        -webkit-box-orient: vertical;
    }
}

//prefix
@mixin prefix($property, $value, $prefixes: (webkit)){
    @each $prefix in $prefixes {
        #{'-' + $prefix + '-' + $property}: $value;
    }
    #{$property}: $value;
}

//virtual
@mixin virtual($width, $height){
    content: '';
    display: block;
    position: absolute;
    width: $width;
    height: $height;
}

// vw
@function parseInt($n) {
    @return $n / ($n * 0 + 1);
}
@mixin vw($prop, $vlus) {
	$px: ();
	$vw: ();

	@each $vlu in $vlus {
		@if $vlu == 0 or $vlu == auto {
			$px: append($px, $vlu);
			$vw: append($vw, $vlu);
		} @else {
			$unit: unit($vlu);
			$val: parseInt($vlu);

			@if $unit == 'px' {
				$px: append($px, $vlu);
				$max-mobile: 375;
				$vw-context: ($max-mobile * .01) * 1;
				$vw: append($vw, (($val/$vw-context) * 1 + vw));
			}

			@if $unit == 'vw' {
				$px: append($px, ($val * 16 + px));
				$vw: append($vw, $vlu);
			}
		}
	}

	@if $px == $vw {
		#{$prop}: $px;
	} @else {
		#{$prop}: $px;
		@include minMobile(){
			#{$prop}: $vw;
		}
	}
}

@function vh($target, $integral){
    @return $target / $integral * 100 + vh;
}
@function vw($target, $integral){
    @return $target / $integral * 100 + vw;
}

//icon-size
@mixin ico16 {
    width: 16px;
    height: 16px;
}
@mixin ico20 {
    width: 20px;
    height: 20px;
}
@mixin ico24 {
    width: 24px;
    height: 24px;
}
@mixin ico30 {
    width: 30px;
    height: 30px;
}

//@button
@mixin btn-def{
    position: relative;
    display: inline-block;
    vertical-align: middle;
    text-align: center;
    border-radius: 3px;
    color: $white;
}
@mixin btn-bg{
    position: relative;
    display: inline-block;
    vertical-align: middle;
    text-align: center;
    border-radius: 3px;
    background: $grd;
    color: $white;
}
@mixin btn-r{
    position: relative;
    display: inline-block;
    vertical-align: middle;
    text-align: center;
    border-radius: 16px;
    font-size: 12px;
    color: $white;
}

// flag
@mixin flag-notice {
    position: relative;
    &::before{
        position: absolute;
        content: '공지사항';
        margin-right: 8px;
        display: inline-block;
        width: 50px;
        height: 24px;
        line-height: 24px;
        border-radius: 3px;
        text-align: center;
        font-size: 10px;
        background-color: $brown;
        color: $yellow;
    }
}

@keyframes fadeInUp {
    0% {
        opacity: 0;
        transform: translateY(0, 100%, 0);
    }
    to {
        opacity: 1;
        transform: translateZ(0);
        transition: all .8s;
    }
}
@keyframes fadeInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100%);
    }
    to {
        opacity: 1;
        transform: translateX(0);
        transition: all .8s;
    }
}
@keyframes fadeInRight {
    0% {
        opacity: 0;
        transform: translateX(100%);
    }
    to {
        opacity: 1;
        transform: translateX(0);
        transition: all .8s;
    }
}